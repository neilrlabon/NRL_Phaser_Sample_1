{"version":3,"file":"app.js","mappings":"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","sources":["webpack://starter-project/./src/ts/Config/global_config.ts","webpack://starter-project/./src/ts/Const/AnimationKeys.ts","webpack://starter-project/./src/ts/Const/TextureKeys.ts","webpack://starter-project/./src/ts/Game.ts","webpack://starter-project/./src/ts/Library/taktyl/display/button/base_button.ts","webpack://starter-project/./src/ts/Library/taktyl/display/button/label_button.ts","webpack://starter-project/./src/ts/Library/taktyl/display/text/base_text.ts","webpack://starter-project/./src/ts/Library/taktyl/display/text/localized_text.ts","webpack://starter-project/./src/ts/Library/taktyl/managers/localization_manager.ts","webpack://starter-project/./src/ts/Library/taktyl/managers/sound_manager.ts","webpack://starter-project/./src/ts/Prefabs/Zero.ts","webpack://starter-project/./src/ts/Scenes/game_over_scene.ts","webpack://starter-project/./src/ts/Scenes/main_game_scene.ts","webpack://starter-project/./src/ts/Scenes/main_menu_scene.ts","webpack://starter-project/./src/ts/Scenes/preloader_scene.ts","webpack://starter-project/./src/ts/utilities.ts","webpack://starter-project/external var \"Phaser\"","webpack://starter-project/webpack/bootstrap","webpack://starter-project/webpack/startup"],"sourcesContent":["const GlobalConfig = {\r\n    type: Phaser.AUTO,\r\n    dimensions: {\r\n        width: 960,\r\n        height: 640,\r\n    },\r\n    enableMobileAutoAdjust: false,\r\n    // Debugging Flags\r\n    showDebugLines: false,\r\n    showDebugConsole: false,\r\n};\r\n\r\nexport default GlobalConfig;\r\n","enum AnimationKeys\r\n{\r\n    ZeroAttack = 'zero-attack',\r\n    ZeroAttackUp = 'zero-attack-up',\r\n    ZeroAttackDown = 'zero-attack-down',\r\n    ZeroBoost = 'zero-boost',\r\n    ZeroDead = 'zero-dead',\r\n    ZeroHit1 = 'zero-hit-1',\r\n    ZeroHit2 = 'zero-hit-2',\r\n    ZeroIdle = 'zero-idle',\r\n    ZeroJump = 'zero-jump',\r\n    ZeroJumpPeak = 'zero-jump-peak',\r\n    ZeroFall = 'zero-fall',\r\n    ZeroLand = 'zero-land',\r\n    ZeroRun = 'zero-run',\r\n    ZeroSlide = 'zero-slide'\r\n}\r\n\r\nexport default AnimationKeys\r\n","enum TextureKeys{\r\n    PlayerZero = 'player-zero',\r\n    Tiles = 'game-tiles',\r\n    Background = 'background',\r\n    Spike = 'spike',\r\n    Acid = 'acid',\r\n    Saw = 'saw',\r\n    Destructible = 'destructible',\r\n    Coin = 'coin'\r\n}\r\n\r\nexport default TextureKeys\r\n","import 'phaser';\r\nimport Preloader from \"./Scenes/preloader_scene\";\r\nimport MainMenu from \"./Scenes/main_menu_scene\";\r\nimport Utilities from \"./utilities\";\r\nimport MainGame from \"./Scenes/main_game_scene\";\r\nimport GlobalConfig from \"./Config/global_config\";\r\nimport SoundManager from './Library/taktyl/managers/sound_manager';\r\nimport GameOver from './Scenes/game_over_scene';\r\ndeclare var __PKG_NAME__: string;\r\ndeclare var __PKG_VERSION__: string;\r\n\r\nconst gameConfig: Phaser.Types.Core.GameConfig = {\r\n\ttype: Phaser.AUTO,\r\n\tphysics: {\r\n\t\tdefault: 'arcade',\r\n\t\tarcade: {\r\n\t\t\tgravity: {y: 300},\r\n\t\t\tdebug: false\r\n\t\t}\r\n\t},\r\n\tbackgroundColor: 0xe5e5e5,\r\n\tscale: {\r\n\t\tmode: Phaser.Scale.FIT,\r\n\t\tautoCenter: Phaser.Scale.CENTER_BOTH,\r\n\t\tparent: \"content\",\r\n\t\twidth: GlobalConfig.dimensions.width,\r\n\t\theight: GlobalConfig.dimensions.height,\r\n\t},\r\n\trender: {\r\n\t\ttransparent: false\r\n\t},\r\n\tinput: {\r\n\t\tactivePointers: 1,\r\n\t},\r\n\ttitle: __PKG_NAME__,\r\n\tversion: __PKG_VERSION__\r\n};\r\n\r\nexport default class Game extends Phaser.Game {\r\n\tconstructor(config: Phaser.Types.Core.GameConfig) {\r\n\t\tUtilities.LogSceneMethodEntry(\"Game\", \"constructor\");\r\n\r\n\t\tsuper(config);\r\n\r\n\t\tthis.scene.add(Preloader.Name, Preloader);\r\n\t\tthis.scene.add(MainMenu.Name, MainMenu);\r\n\t\tthis.scene.add(MainGame.Name, MainGame);\r\n\t\tthis.scene.add(GameOver.Name, GameOver);\r\n\t\tthis.scene.start(Preloader.Name);\r\n\r\n\t\t// Initialize some managers here\r\n\t\t// Add pause/resume listeners\r\n\t\twindow.addEventListener('blur', this.onPause.bind(this));\r\n\t\twindow.addEventListener('focus', this.onResume.bind(this));\r\n\t\twindow.addEventListener('pagehide', this.onPause.bind(this));\r\n\t\twindow.addEventListener('pageshow', this.onResume.bind(this));\r\n\r\n\t\t// Add visibility change listeners\r\n\t\tdocument.addEventListener('webkitvisibilitychange', this.onVisibilityChange.bind(this));\r\n\t\twindow.document.addEventListener('visibilitychange', this.onVisibilityChange.bind(this));\r\n\t}\r\n\r\n\t/*---------- PRIVATE METHODS ----------*/\r\n\r\n\t/**\r\n\t * On pause game.\r\n\t */\r\n\tprivate onPause() {\r\n\t\t// Pause all sounds here\r\n\t\tSoundManager.instance.pauseBGM();\r\n\t\tSoundManager.instance.pauseAllSFX();\r\n\t\tSoundManager.instance.pauseVO();\r\n\t}\r\n\r\n\t/**\r\n\t * On resume game.\r\n\t */\r\n\tprivate onResume() {\r\n\t\t// Resume all sounds here\r\n\t\tSoundManager.instance.resumeBGM();\r\n\t\tSoundManager.instance.resumeAllSFX();\r\n\t\tSoundManager.instance.resumeVO();\r\n\t}\r\n\r\n\t/**\r\n\t * On browser visibility change.\r\n\t */\r\n\tprivate onVisibilityChange() {\r\n\t\tif (window.document.hidden) this.onPause();\r\n\t\telse this.onResume();\r\n\t}\r\n}\r\n\r\nwindow.onload = (): void => {\r\n\tconst game = new Game(gameConfig);\r\n};\r\n","import SoundManager from \"../../managers/sound_manager\";\r\n\r\n/*---------- STATIC METHODS ----------*/\r\nlet _defaultSFX = null;\r\n\r\n/**\r\n * Generic button.\r\n */\r\nexport default class BaseButton extends Phaser.GameObjects.Container {\r\n\r\n    /*---------- SYMBOLS FOR PRIVATES ----------*/\r\n    private pointerUpTexture: string;\r\n    private pointerDownTexture: string;\r\n    private hoverTexture: string;\r\n    private disabledTexture: string;\r\n\r\n    private baseButton: Phaser.GameObjects.Image;\r\n\r\n    private isActive: boolean;\r\n    private isDown: boolean;\r\n\r\n    private buttonCallback: Function;\r\n\r\n    private onClickScale: any;\r\n\r\n    private baseScale: any;\r\n\r\n    constructor(p_scene: Phaser.Scene, posX: number, posY: number,\r\n        pointerUpTexture: string, pointerDownTexture: string, hoverTexture: string, disabledTexture: string,\r\n        scaleOnPointerDown: any) {\r\n\r\n        super(p_scene, posX, posY);\r\n\r\n        this.pointerUpTexture = pointerUpTexture;\r\n        this.pointerDownTexture = pointerDownTexture;\r\n        this.hoverTexture = hoverTexture;\r\n        this.disabledTexture = disabledTexture;\r\n\r\n        this.onClickScale = scaleOnPointerDown;\r\n        this.baseScale = {\r\n            x: 1,\r\n            y: 1\r\n        }\r\n\r\n        this.isDown = false;\r\n        this.isActive = true;\r\n\r\n        this.setup();\r\n\r\n        p_scene.add.existing(this);\r\n    }\r\n\r\n    static get defaultSFX() { return _defaultSFX; }\r\n\r\n    static set defaultSFX(p_value: string) {\r\n        _defaultSFX = p_value;\r\n    }\r\n\r\n    set textureUp(pointerUpTexture: string) {\r\n        this.pointerUpTexture = pointerUpTexture;\r\n        this.baseButton.setTexture(this.pointerUpTexture);\r\n    }\r\n\r\n    set onClick(callback: Function) {\r\n        this.buttonCallback = callback;\r\n    }\r\n\r\n    setup() {\r\n        this.baseButton = this.scene.add.image(0, 0, this.pointerUpTexture);\r\n\r\n        this.add(this.baseButton);\r\n\r\n        this.setSize(this.getBounds().width, this.getBounds().height);\r\n        this.baseButton.setInteractive({ pixelPerfect: true, alphaTolerance: 1 });\r\n\r\n        this.baseButton.on('pointerout', this.onPointerOut, this);\r\n        this.baseButton.on('pointerdown', this.onPointerDown, this);\r\n        this.baseButton.on('pointerin', this.onPointerIn, this);\r\n        this.baseButton.on('pointerup', this.onPointerUp, this);\r\n\r\n    }\r\n\r\n    onPointerOut() {\r\n        if (!this.isActive && this.disabledTexture) {\r\n            this.baseButton.setTexture(this.disabledTexture);\r\n        }\r\n        else {\r\n            this.baseButton.setTexture(this.pointerUpTexture);\r\n        }\r\n        this.isDown = false;\r\n        this.setScale(this.baseScale.x, this.baseScale.y);\r\n    }\r\n\r\n    onPointerDown(pointer: any) {\r\n        if (!pointer.leftButtonDown()) return;\r\n        this.isDown = true;\r\n        if (this.isActive) {\r\n            if (this.onClickScale) {\r\n                this.baseScale.x = this.scaleX;\r\n                this.baseScale.y = this.scaleY;\r\n                this.setScale(this.onClickScale.x, this.onClickScale.y);\r\n            }\r\n            if (this.pointerDownTexture) {\r\n                this.baseButton.setTexture(this.pointerDownTexture);\r\n            }\r\n        }\r\n    }\r\n\r\n    onPointerIn(pointer: any) {\r\n        if (!this.isDown && this.isActive) {\r\n            if (this.hoverTexture) {\r\n                this.baseButton.setTexture(this.hoverTexture);\r\n            }\r\n        }\r\n    }\r\n\r\n    onPointerUp(pointer: any) {\r\n        if (this.isDown && this.isActive) {\r\n            this.setScale(this.baseScale.x, this.baseScale.y);\r\n            if (_defaultSFX != null) {\r\n                SoundManager.instance.playSFX(this.scene, _defaultSFX);\r\n            }\r\n\r\n            if (this.buttonCallback != null) {\r\n                this.buttonCallback();\r\n            }\r\n        }\r\n        if (!this.isActive && this.disabledTexture) {\r\n            this.baseButton.setTexture(this.disabledTexture);\r\n        }\r\n        else {\r\n            this.baseButton.setTexture(this.pointerUpTexture);\r\n        }\r\n        this.isDown = false;\r\n    }\r\n\r\n    PointerUpOutside(pointer: any) {\r\n        //if(!pointer.leftButtonDown()) return;\r\n        if (!this.isDown) return;\r\n        this.setScale(this.baseScale.x, this.baseScale.y);\r\n        if (!this.isActive && this.disabledTexture) {\r\n            this.baseButton.setTexture(this.disabledTexture);\r\n        }\r\n        else {\r\n            this.baseButton.setTexture(this.pointerUpTexture);\r\n        }\r\n    }\r\n\r\n    setDisabled(p_tintEnabled = true) {\r\n        this.isActive = false;\r\n        this.disableInteractive();\r\n        if (this.disabledTexture) {\r\n            this.baseButton.setTexture(this.disabledTexture);\r\n        } else {\r\n\r\n            if (p_tintEnabled === true) {\r\n\r\n                this.iterate(function (objects: any) {\r\n                    if (objects.setTint)\r\n                        objects.setTint(0x808080);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    setEnabled() {\r\n        this.isActive = true;\r\n        this.disableInteractive();\r\n        this.baseButton.setTexture(this.pointerUpTexture);\r\n        this.iterate(function (objects: any) {\r\n            if (objects.clearTint)\r\n                objects.clearTint();\r\n        });\r\n    }\r\n}\r\n","import LocalizedText from \"../text/localized_text\";\r\nimport BaseButton from \"./base_button\";\r\n\r\n/**\r\n * Label button.\r\n */\r\nexport default class LabelButton extends BaseButton {\r\n\r\n    constructor(p_scene: Phaser.Scene, posX: number, posY: number,\r\n        pointerUpTexture: string, pointerDownTexture: string, hoverTexture: string, disabledTexture: string,\r\n        scaleOnPointerDown: any,\r\n        textKey: string) {\r\n\r\n        super(p_scene, posX, posY, pointerUpTexture, pointerDownTexture, hoverTexture, disabledTexture, scaleOnPointerDown);\r\n\r\n        let txtLabel = new LocalizedText(p_scene, textKey, 0, 0);\r\n        txtLabel.setOrigin(0.5, 0.5);\r\n        this.add(txtLabel);\r\n    }\r\n}\r\n","const _wordWrapWidth = Symbol(\"wordWrapWidth\");\r\n\r\nexport default class BaseText extends Phaser.GameObjects.BitmapText {\r\n\r\n    private tween: any;\r\n\r\n    constructor(scene: Phaser.Scene, posX: number, posY: number, font, text, size, align) {\r\n        super(scene, posX, posY, font, text, size, align);\r\n        scene.add.existing(this);\r\n        this.scene = scene;\r\n    }\r\n\r\n    set wordWrapWidth(value) {\r\n        this[_wordWrapWidth] = value;\r\n        let wordArray = this.text.split(\" \");\r\n        let finalText = \"\";\r\n        for (let i = 0; i < wordArray.length; i++) {\r\n            let testWord = this.splitWord(wordArray[i]);\r\n            this.text = finalText + \" \" + testWord;\r\n            if (this.width > this[_wordWrapWidth]) {\r\n                finalText += \"\\n\" + testWord;\r\n            } else {\r\n                finalText += \" \" + testWord;\r\n            }\r\n        }\r\n        this.text = finalText;\r\n    }\r\n\r\n    splitWord(word) {\r\n        for (let i = 0; i < word.length; i++) {\r\n            let sampleWord = word;\r\n            if (i != 0) {\r\n                sampleWord = word.slice(0, word.length - i) + \"-\\n\" + word.slice(word.length - 1 - i, word.length);\r\n\r\n            }\r\n            this.text = sampleWord;\r\n            if (this.width < this[_wordWrapWidth]) {\r\n                return sampleWord;\r\n            }\r\n        }\r\n    }\r\n\r\n    tweenToValue(from, to, duration) {\r\n        console.log(from);\r\n        console.log(to);\r\n        if (from == to)\r\n            return;\r\n        if (this.tween) {\r\n            this.tween.stop();\r\n            this.tween = null;\r\n        }\r\n        this.tween = this.scene.tweens.addCounter({\r\n            from: from,\r\n            to: to,\r\n            duration: duration\r\n        })\r\n    }\r\n\r\n    updateText() {\r\n        if (this.tween)\r\n            this.text = Math.floor(this.tween.getValue()).toLocaleString();\r\n    }\r\n}\r\n","import LocalizationManager from \"../../managers/localization_manager\";\r\nimport BaseText from \"./base_text\";\r\n\r\nconst _data = Symbol('_data');\r\n\r\nexport default class LocalizedText extends BaseText {\r\n    constructor(scene, key, posX, posY, scale = 1) {\r\n        let data = LocalizationManager.instance.getLocalizedTextData(key);\r\n        super(scene, posX, posY, data.font, data.text, scale * data.size, data.align);\r\n        this.setTint(Number.parseInt(data.color));\r\n        this[_data] = data;\r\n    }\r\n\r\n    get localizedData() { return this[_data]; }\r\n\r\n    destroy() {\r\n        this[_data] = null;\r\n    }\r\n}\r\n","/*---------- SYMBOLS FOR PRIVATES ----------*/\r\n\r\n// ** For Singleton\r\nconst _sInstance = Symbol('_sInstance');\r\nconst _sEnforcer = Symbol('_sEnforcer');\r\n\r\n// ** Properties\r\nconst _dataLocale = Symbol('_dataLocale');\r\nconst _languageCode = Symbol('_languageCode');\r\n\r\n// ** Methods\r\nconst _initProps = Symbol('_initProps');\r\n\r\n/**\r\n * Localization Manager class.\r\n */\r\n export default class LocalizationManager {\r\n\r\n    /*---------- CONSTRUCTOR ----------*/\r\n\r\n    /**\r\n     * Creates a new <code>LocalizationManager</code> instance.\r\n     * \r\n     * Do not create instance directly. Use <code>instance</code> method instead.\r\n     * \r\n     * @param {Symbol} p_enforcer The singleton enforcer\r\n     */\r\n    constructor(p_enforcer) {\r\n\r\n        // Check if enforcer is invalid, then throw error\r\n        if (p_enforcer !== _sEnforcer) throw new Error(\"Cannot construct singleton.\");\r\n\r\n        // Initialize properties\r\n        this[_initProps]();\r\n    }\r\n\r\n    /*---------- STATIC METHODS ----------*/\r\n\r\n    /**\r\n     * @returns The instance for this singleton.\r\n     */\r\n    static get instance() {\r\n\r\n        // Create new instance, if singleton instance is empty.\r\n        if (this[_sInstance] == null) {\r\n            this[_sInstance] = new LocalizationManager(_sEnforcer);\r\n        }\r\n\r\n        return this[_sInstance];\r\n    }\r\n\r\n    /*---------- PUBLIC METHODS ----------*/\r\n\r\n    /**\r\n     * Get localized text data\r\n     * @param {String} p_key The string key for the localized text data.\r\n     * \r\n     * @returns The corresponding localized text data for the given key\r\n     */\r\n    getLocalizedTextData(p_key) {\r\n\r\n        // Check if data is empty, then throw error\r\n        if (this[_dataLocale] == null) throw 'Cannot continue getLocalizedTextData. Locale data is empty.';\r\n\r\n        return this[_dataLocale][p_key];\r\n    }\r\n\r\n    /**\r\n     * Set locale data.\r\n     * \r\n     * @param {Phaser.Scene} p_scene Reference to a scene object.\r\n     * @param {String} p_languageCode The corresponding language code.\r\n     * @param {Function} p_callbackComplete Optional. The callback to invoke when setting of locale data is complete.\r\n     * @param {Function} p_callbackError Optional. The callback to invoke when an error occurs while setting of locale data.\r\n     */\r\n    setLocaleData(p_scene, p_languageCode, p_callbackComplete = null, p_callbackError = null) {\r\n\r\n        // Check if current value of language code is same as param value, then return\r\n        if (this[_languageCode] == p_languageCode) return;\r\n\r\n        // Initialize locale string, with previous localization value\r\n        let strLocale = `locale_${this[_languageCode]}`;\r\n\r\n        // Check if there is an existing locale data in cache\r\n        if (p_scene.cache.json.has(strLocale) === true) {\r\n\r\n            // Remove data from cache\r\n            p_scene.cache.json.remove(strLocale);\r\n        }\r\n\r\n        // Set language code\r\n        this[_languageCode] = p_languageCode.toLowerCase();\r\n\r\n        // Update locale string\r\n        strLocale = `locale_${this[_languageCode]}`;\r\n\r\n        // Add to load queue of scene\r\n        p_scene.load.json(strLocale, `assets/strings/${strLocale}.json`)\r\n\r\n        // Initialize onLoad listeners\r\n        let onLoadComplete = (p_loader) => {\r\n\r\n            // Get data from scene\r\n            this[_dataLocale] = p_scene.cache.json.get(strLocale).items;\r\n\r\n            // Call callback if any\r\n            if (p_callbackComplete != null) p_callbackComplete();\r\n        };\r\n\r\n        let onLoadError = (p_loader) => {\r\n\r\n            // Call callback if any\r\n            if (p_callbackError != null) p_callbackError();\r\n        };\r\n\r\n        // Listen to load complete\r\n        p_scene.load.once('complete', onLoadComplete);\r\n        p_scene.load.once('loaderror', onLoadError);\r\n\r\n        // Start load, but with delay\r\n        setTimeout(() => {\r\n            p_scene.load.start();\r\n        }, 500);\r\n    }\r\n\r\n    /*---------- PRIVATE METHODS ----------*/\r\n\r\n    /**\r\n     * Initialize properties.\r\n     */\r\n    [_initProps]() {\r\n\r\n        // Initialize properties\r\n        this[_dataLocale] = null;\r\n        this[_languageCode] = null;\r\n    }\r\n\r\n}\r\n","export default class SoundManager {\r\n\r\n    private static managerInstance: SoundManager;\r\n    private static soundManagerEnforcer: SoundManager;\r\n\r\n    private sfxList: any;\r\n    private bgmVolume: number;\r\n    private sfxVolume: number;\r\n    private voVolume: number;\r\n\r\n    private isBGMMuted: boolean;\r\n    private isSFXMuted: boolean;\r\n    private isVOMuted: boolean;\r\n\r\n    private bgm: any;\r\n    private vo: any;\r\n    private sfx: any;\r\n\r\n    constructor(p_enforcer) {\r\n        if (p_enforcer !== SoundManager.soundManagerEnforcer) throw new Error(\"Cannot construct singleton\");\r\n\r\n        this.sfxList = [];\r\n\r\n        this.bgmVolume = 1;\r\n        this.sfxVolume = 1;\r\n        this.voVolume = 1;\r\n\r\n        this.isBGMMuted = false;\r\n        this.isSFXMuted = false;\r\n        this.isVOMuted = false;\r\n    }\r\n\r\n    static get instance() {\r\n        if (!SoundManager.managerInstance) {\r\n            SoundManager.managerInstance = new SoundManager(SoundManager.soundManagerEnforcer);\r\n        }\r\n\r\n        return SoundManager.managerInstance;\r\n    }\r\n\r\n    get isMuted() {\r\n        return localStorage.getItem(\"disney_wof_isMuted\") == \"true\" || false;\r\n    }\r\n\r\n    get SFXList() { return this.sfxList; }\r\n\r\n    get IsBGMMuted() {\r\n        return this.isBGMMuted;\r\n    }\r\n\r\n    get IsSFXMuted() {\r\n        return this.isSFXMuted;\r\n    }\r\n\r\n    get IsVOMuted() {\r\n        return this.isVOMuted;\r\n    }\r\n\r\n    get BGMolume() {\r\n        return this.bgmVolume;\r\n    }\r\n\r\n    get SFXVolume() {\r\n        return this.sfxVolume;\r\n    }\r\n\r\n    get VOVolume() {\r\n        return this.voVolume;\r\n    }\r\n\r\n    set BGMVolume(volume) {\r\n        this.bgmVolume = volume;\r\n        if (this.bgm) {\r\n            this.bgm.setVolume(volume);\r\n        }\r\n    }\r\n\r\n    set SFXVolume(volume) {\r\n        this.sfxVolume = volume;\r\n        for (let i = 0; i < this.sfx.length; i++) {\r\n            this.sfx[i].setVolume(volume * this.sfx[i].playbackVolume);\r\n        }\r\n    }\r\n\r\n    set VOVolume(volume) {\r\n        this.voVolume = volume;\r\n        if (this.vo) {\r\n            this.vo.setVolume(volume);\r\n        }\r\n    }\r\n\r\n    playBGM(scene: Phaser.Scene, key: string) {\r\n        if (this.bgm) {\r\n            this.bgm.stop();\r\n        }\r\n\r\n        this.bgm = scene.sound.add(key, {\r\n            mute: this.isBGMMuted,\r\n            volume: this.bgmVolume,\r\n            loop: true\r\n        });\r\n        this.bgm.play();\r\n\r\n        return this.bgm;\r\n    }\r\n\r\n    playSFX(scene: Phaser.Scene, key: string, volume = 1) {\r\n        let newSFX = scene.sound.add(key, {\r\n            mute: this.isSFXMuted,\r\n            volume: this.sfxVolume * volume,\r\n            loop: false\r\n        });\r\n        newSFX.play();\r\n        this.sfxList.push(newSFX);\r\n\r\n        newSFX.once('ended', this.OnSFXEnd.bind(this));\r\n        newSFX.once('stop', this.OnSFXEnd.bind(this));\r\n\r\n        return newSFX;\r\n    }\r\n\r\n    playVO(scene: Phaser.Scene, key: string) {\r\n        if (this.vo) {\r\n            this.vo.stop();\r\n        }\r\n\r\n        this.vo = scene.sound.add(key, {\r\n            mute: this.isVOMuted,\r\n            volume: this.voVolume,\r\n            loop: false\r\n        });\r\n        this.vo.play();\r\n        return this.vo;\r\n    }\r\n\r\n    muteAll(value) {\r\n        this.muteBGM(value);\r\n        this.muteAllSFX(value);\r\n        this.muteVO(value);\r\n    }\r\n\r\n    muteBGM(value) {\r\n        this.isBGMMuted = value;\r\n        if (this.bgm != null) this.bgm.setMute(this.isBGMMuted);\r\n    }\r\n\r\n    muteAllSFX(value) {\r\n        this.isSFXMuted = value;\r\n        for (let i = 0; i < this.sfxList.length; i++) {\r\n            if (this.sfx[i] != null) this.sfx[i].setMute(this.isSFXMuted);\r\n        }\r\n    }\r\n\r\n    muteVO(value) {\r\n        this.isVOMuted = value;\r\n        if (this.vo != null) this.vo.setMute(this.isVOMuted);\r\n    }\r\n\r\n    pauseBGM() {\r\n        if (this.bgm) {\r\n            this.bgm.pause();\r\n        }\r\n    }\r\n\r\n    pauseAllSFX() {\r\n        for (let i = 0; i < this.sfxList.length; i++) {\r\n            this.sfxList[i].pause();\r\n        }\r\n    }\r\n\r\n    pauseVO() {\r\n        if (this.vo) {\r\n            this.vo.pause();\r\n        }\r\n    }\r\n\r\n    resumeBGM() {\r\n        if (this.bgm) {\r\n            this.bgm.resume();\r\n        }\r\n    }\r\n\r\n    resumeAllSFX() {\r\n        for (let i = 0; i < this.sfxList.length; i++) {\r\n            this.sfxList[i].resume();\r\n        }\r\n    }\r\n\r\n    resumeVO() {\r\n        if (this.vo) {\r\n            this.vo.resume();\r\n        }\r\n    }\r\n\r\n    stopBGM() {\r\n        if (this.bgm) {\r\n            this.bgm.stop();\r\n            this.bgm = null;\r\n        }\r\n    }\r\n\r\n    stopAllSFX() {\r\n        for (let i = 0; i < this.sfxList.length; i++) {\r\n            this.sfxList[i].stop();\r\n            this.sfxList[i] = null;\r\n        }\r\n\r\n        this.sfxList = [];\r\n    }\r\n\r\n    stopVO() {\r\n        if (this.vo) {\r\n            this.vo.stop();\r\n            this.vo = null;\r\n        }\r\n    }\r\n\r\n    private OnSFXEnd(music) {\r\n        let index = this.sfxList.indexOf(music);\r\n        if (index > -1) {\r\n            this.sfxList.splice(index, 1);\r\n        }\r\n    }\r\n}\r\n","import Phaser, { Physics } from 'phaser';\r\nimport Utilities from \"../utilities\";\r\nimport { debug } from 'webpack';\r\nimport AnimationKeys from '../Const/AnimationKeys';\r\nimport TextureKeys from '../Const/TextureKeys';\r\nimport GameOver from '../Scenes/game_over_scene';\r\nimport MainGame from '../Scenes/main_game_scene';\r\n\r\nenum PlayerState{\r\n    idle,\r\n    moving,\r\n    hit,\r\n    dead\r\n}\r\n\r\nexport default class Zero extends Phaser.GameObjects.Container{\r\n    private playerZero: Phaser.GameObjects.Sprite\r\n    \r\n    private playerState = PlayerState.moving;\r\n\r\n    public playerHealth;\r\n\r\n    private cursors: Phaser.Types.Input.Keyboard.CursorKeys\r\n\r\n    private grounded: boolean\r\n    private falling: boolean\r\n\r\n    public attackHitBox!: Phaser.Types.Physics.Arcade.ImageWithDynamicBody\r\n\r\n    constructor(scene: Phaser.Scene, x: number, y: number){\r\n        super(scene, x, y)\r\n        this.playerZero = scene.add.sprite(0, 0, \r\n            TextureKeys.PlayerZero).setScale(1.75).setOrigin(0,1);\r\n\r\n        this.initAnimations();\r\n\r\n        this.playerHealth = 3;\r\n\r\n        this.playerZero.play(AnimationKeys.ZeroRun, true);\r\n\r\n        this.add(this.playerZero);\r\n\r\n        scene.physics.add.existing(this);\r\n\r\n        const body = this.body as Phaser.Physics.Arcade.Body;\r\n        body.setSize(60,80).setOffset(-30,-80);\r\n\r\n        this.attackHitBox = scene.add.rectangle(80, -60, 100, 120, 0xffffff, 0.5) as unknown as Phaser.Types.Physics.Arcade.ImageWithDynamicBody;\r\n        this.add(this.attackHitBox);   \r\n        scene.physics.add.existing(this.attackHitBox);\r\n        this.attackHitBox.body.setAllowGravity(false);\r\n        \r\n\r\n        this.cursors = scene.input.keyboard.createCursorKeys();\r\n    }\r\n\r\n    preUpdate(){\r\n        const body = this.body as Phaser.Physics.Arcade.Body\r\n\r\n        if(this.playerZero.anims.getName() != (AnimationKeys.ZeroAttackUp || AnimationKeys.ZeroAttackDown || AnimationKeys.ZeroAttack)){\r\n            this.attackHitBox.body.enable = false;\r\n        }\r\n        \r\n        switch (this.playerState){\r\n            case PlayerState.moving: {\r\n\r\n                this.grounded = body.blocked.down; //check if grounded\r\n                this.falling = body.velocity.y > 0 ? true : false ; //check if falling\r\n                body.setSize(60,80).setOffset(-30,-80); //default player hitbox size\r\n\r\n                if(this.grounded){\r\n                    let velX = 0;\r\n                    if(body.touching.up){ //Testing slide continous\r\n                        this.playerZero.play(AnimationKeys.ZeroSlide, true);\r\n                        body.setVelocityX(300);\r\n                        body.setSize(90,50).setOffset(-50,-50);\r\n                    }\r\n                    else if(this.cursors.left?.isDown){ //Attack on Ground\r\n                        this.playerZero.play(AnimationKeys.ZeroAttack, true);\r\n                        body.setVelocityX(0);\r\n                        this.setAttackHitBox(true, 80, -60, 100, 120);\r\n                    }\r\n                    else if(this.cursors.up?.isDown){ //Jump\r\n                        this.playerZero.play(AnimationKeys.ZeroJump, true);\r\n                        body.setVelocityY(-300);\r\n                    }\r\n                    else if(this.cursors.right?.isDown){ //Slide\r\n                        this.playerZero.play(AnimationKeys.ZeroSlide, true);\r\n                        body.setVelocityX(300);\r\n                        body.setSize(90,50).setOffset(-60,-50);\r\n                    }\r\n                    else if(this.cursors.down?.isDown){ //Boosted Slide\r\n                        this.playerZero.play(AnimationKeys.ZeroBoost, true);\r\n                        body.setSize(90,50).setOffset(-60,-50);\r\n                        body.setVelocityX(500);\r\n                    }\r\n                    else{ //Set animation to Running Animation\r\n                        if(this.playerZero.anims.currentAnim.repeat != -1){\r\n                            this.playerZero.playAfterRepeat(AnimationKeys.ZeroRun)\r\n                        }\r\n                        else{\r\n                            this.playerZero.play(AnimationKeys.ZeroRun, true)\r\n                        }\r\n                        body.setVelocityX(200)\r\n                    }\r\n                }\r\n                else{\r\n                    if(this.cursors.down?.isDown){ //Quick fall when pressing down key\r\n                        this.playerZero.play(AnimationKeys.ZeroFall, true)\r\n                        body.setVelocityY(500)\r\n                    }\r\n                    else if(this.falling){ \r\n                        if(this.cursors.left?.isDown){ //Attack down when player is falling\r\n                            this.playerZero.play(AnimationKeys.ZeroAttackDown, true)\r\n                            this.setAttackHitBox(true, 80, -60, 100, 120);\r\n                        }\r\n                        else if(this.playerZero.anims.currentAnim.repeat > -1){\r\n                            this.playerZero.playAfterRepeat(AnimationKeys.ZeroFall)\r\n                        }\r\n                        else{ //Switch to peak animation when not grounded but velocity approximately 0\r\n                            if(Math.round(body.velocity.y) == 0){\r\n                                this.playerZero.play(AnimationKeys.ZeroJumpPeak)\r\n                            }\r\n                            else{ //Fall when not grounded\r\n                                this.playerZero.play(AnimationKeys.ZeroFall, true)\r\n                            }\r\n                        }\r\n                    }\r\n                    else{\r\n                        if(this.cursors.left?.isDown){ //Attack up when player is rising upon jump\r\n                            this.playerZero.play(AnimationKeys.ZeroAttackUp, true)\r\n                            this.setAttackHitBox(true, 50, -100, 50, 120);\r\n                        }\r\n                        else{\r\n                            if(this.playerZero.anims.currentAnim.repeat > -1){\r\n                                this.playerZero.playAfterRepeat(AnimationKeys.ZeroJump)\r\n                            }\r\n                            else{\r\n                            this.playerZero.play(AnimationKeys.ZeroJump, true)\r\n                            }\r\n                        }\r\n                        body.setVelocityX(250)\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case PlayerState.hit:{\r\n                console.log(\"HIT\");\r\n                this.playerZero.play(AnimationKeys.ZeroHit1, true);\r\n                body.setVelocityX(0);\r\n                if(this.playerZero.anims.getProgress() == 1){\r\n                    if(this.playerHealth <= 0){\r\n                        this.playerState = PlayerState.dead;\r\n                    }\r\n                    else{\r\n                    this.playerState = PlayerState.moving;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case PlayerState.dead: {\r\n                if(this.playerZero.anims.getName() != AnimationKeys.ZeroDead){\r\n                    this.playerZero.play(AnimationKeys.ZeroDead, true);\r\n                    body.setVelocityX(0);\r\n                }\r\n\r\n                if(this.scene.scene.isActive(GameOver.Name)){\r\n                    break;\r\n                }\r\n\r\n                this.scene.scene.stop(MainGame.Name);\r\n                this.scene.scene.run(GameOver.Name);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    //Creat animation for player character\r\n    private initAnimations(){\r\n        this.createAnimations(AnimationKeys.ZeroIdle, TextureKeys.PlayerZero,'Idle/', 0, 3, 12, -1)\r\n        this.createAnimations(AnimationKeys.ZeroAttack, TextureKeys.PlayerZero, 'Attack/', 0, 10, 24, 0)\r\n        this.createAnimations(AnimationKeys.ZeroAttackUp, TextureKeys.PlayerZero, 'AttackUp/', 0, 13, 28, 0)\r\n        this.createAnimations(AnimationKeys.ZeroAttackDown, TextureKeys.PlayerZero, 'AttackDown/', 0, 8, 24, 0)\r\n        this.createAnimations(AnimationKeys.ZeroBoost, TextureKeys.PlayerZero, 'Boost/',0, 2, 12, 0)\r\n        this.createAnimations(AnimationKeys.ZeroDead, TextureKeys.PlayerZero, 'Dead/', 0, 3, 8, 0)\r\n        this.createAnimations(AnimationKeys.ZeroJump, TextureKeys.PlayerZero, 'Jump/', 0, 1, 12, -1)\r\n        this.createAnimations(AnimationKeys.ZeroJumpPeak, TextureKeys.PlayerZero, 'Jump/', 2, 6, 24, 0)\r\n        this.createAnimations(AnimationKeys.ZeroFall, TextureKeys.PlayerZero, 'Jump/', 7, 8, 12, -1)\r\n        this.createAnimations(AnimationKeys.ZeroLand, TextureKeys.PlayerZero, 'Jump/', 9, 9, 0, 0)\r\n        this.createAnimations(AnimationKeys.ZeroRun, TextureKeys.PlayerZero, 'Run/', 0, 13, 24, -1)\r\n        this.createAnimations(AnimationKeys.ZeroSlide, TextureKeys.PlayerZero, 'Slide/', 0, 2, 8, -1)\r\n        this.createAnimations(AnimationKeys.ZeroHit1, TextureKeys.PlayerZero, 'Hit-1/', 0, 3, 24, 0)\r\n        this.createAnimations(AnimationKeys.ZeroHit2, TextureKeys.PlayerZero, 'Hit-2/', 0, 5, 24, 0)\r\n    }\r\n\r\n    private createAnimations(animKeys: AnimationKeys, textureKeys: TextureKeys, pFix: string, s, e, fRate, rep){\r\n        this.playerZero.anims.create({\r\n            key: animKeys,\r\n             frames: this.playerZero.anims.generateFrameNames(textureKeys, {\r\n                 start: s, end: e, prefix: pFix, zeroPad: 3, suffix: '.png'\r\n             }),\r\n             frameRate: fRate,\r\n             repeat: rep\r\n         });    \r\n    }\r\n\r\n    public damagePlayer(damage){\r\n        if(damage>this.playerHealth){\r\n            this.playerHealth = 0;\r\n        }\r\n        else{\r\n        this.playerHealth-=damage;\r\n        }\r\n        this.playerState = PlayerState.hit;\r\n    }\r\n\r\n    private setAttackHitBox(enableBody: boolean, x: number, y: number, width: number, height: number){\r\n        this.attackHitBox.body.enable = enableBody;\r\n        this.attackHitBox.x = x;\r\n        this.attackHitBox.y = y;\r\n        this.attackHitBox.body.setSize(width, height);\r\n    }\r\n}\r\n\r\n\r\n\r\n","import Utilities from \"../utilities\";\r\nimport MainGame from \"./main_game_scene\";\r\nimport MainMenu from \"./main_menu_scene\";\r\n\r\nimport BaseButton from \"../Library/taktyl/display/button/base_button\";\r\nimport LabelButton from \"../Library/taktyl/display/button/label_button\";\r\n\r\nexport default class GameOver extends Phaser.Scene{\r\n    public static Name = \"GameOver\";\r\n\r\n    private retryBtn: BaseButton;\r\n    private returnBtn: BaseButton;\r\n    private gameOverText: Phaser.GameObjects.Text\r\n\tprivate scoreText: Phaser.GameObjects.Text\r\n\tprivate highScore: number;\r\n\r\n\tpublic preload(): void {\r\n\t\t// Preload as needed.\r\n\t}\r\n\r\n\tinit(){\r\n\t\tthis.highScore = 0;\r\n\t\tif(localStorage.getItem(\"gameHighScore\") !== null){\r\n\t\t\tthis.highScore = parseInt(localStorage.getItem(\"gameHighScore\"));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic create(): void {\r\n\t\tUtilities.LogSceneMethodEntry(\"MainMenu\", \"create\");\r\n\t\t\r\n\t\tthis.initGraphics();\r\n\t\tthis.initListeners();\r\n\t\tthis.initProps();\r\n\t}\r\n\r\n\tpublic update(): void {\r\n\t\t// Update logic, as needed.\r\n\t}\r\n\r\n    \t/**\r\n\t * Initialize graphics.\r\n\t */\r\n\tprivate initGraphics() {\r\n\t\tconst textYPosition = this.cameras.main.height / 2;\r\n\r\n        this.cameras.main.setBackgroundColor('#1E1E1E');\r\n\r\n\t\tthis.gameOverText = this.add.text( this.cameras.main.centerX, textYPosition-80, `GAME OVER`,{\r\n\t\t\tfontSize: '100px',\r\n\t\t\tfontStyle: 'bold',\r\n            align: 'center',\r\n\t\t\tcolor: '#F2F2F2',\r\n\t\t\tshadow: {fill: true, blur: 2, offsetY: 1, offsetX: 1},\r\n\t\t\tpadding: {left: 15, right: 15, top: 5, bottom: 5}\r\n\t\t}).setScrollFactor(0);\r\n        this.gameOverText.x = this.gameOverText.x - this.gameOverText.width/2;\r\n\r\n\t\tthis.scoreText = this.add.text( this.cameras.main.centerX, textYPosition+30, `Highscore: ${this.highScore}`,{\r\n\t\t\tfontSize: '50px',\r\n\t\t\tfontStyle: 'bold',\r\n            align: 'center',\r\n\t\t\tcolor: '#F2F2F2',\r\n\t\t\tshadow: {fill: true, blur: 2, offsetY: 1, offsetX: 1},\r\n\t\t\tpadding: {left: 15, right: 15, top: 5, bottom: 5}\r\n\t\t}).setScrollFactor(0);\r\n\t\tthis.scoreText.x = this.scoreText.x - this.scoreText.width/2;\r\n\r\n\t\tthis.retryBtn = new LabelButton(this, this.cameras.main.centerX-160, textYPosition + 200, \"btn_general\", \"btn_general\", null, null, { x: 1, y: 1 }, \"retry_btnPlay\");\r\n\t\tthis.retryBtn.onClick = this.onPreviousScene.bind(this);\r\n\r\n        this.returnBtn = new LabelButton(this, this.cameras.main.centerX+160, textYPosition + 200, \"btn_general\", \"btn_general\", null, null, { x: 1, y: 1 }, \"exit_btnPlay\");\r\n\t\tthis.returnBtn.onClick = this.onNextScene.bind(this);\r\n\t}\r\n\t/**\r\n\t * Initialize listeners\r\n\t */\r\n\tprivate initListeners() {\r\n\t\t// Add scene events listeners\r\n\t\tthis.events.on('shutdown', this.onSceneShutdown, this);\r\n\t\tthis.events.on('pause', this.onScenePause, this);\r\n\t\tthis.events.on('resume', this.onSceneResume, this);\r\n\t\t// Add other listeners here\r\n\t}\r\n\t/**\r\n\t * Initialize properties.\r\n\t */\r\n\tprivate initProps() {\r\n\t\t// Initialize properties here\r\n\t}\r\n\r\n    private onPreviousScene(){\r\n\t\tthis.scene.stop(MainGame.Name);\r\n        this.scene.start(MainGame.Name);\r\n    }\r\n\r\n\tprivate onNextScene() {\r\n\t\tthis.scene.stop(MainGame.Name);\r\n\t\tthis.scene.start(MainMenu.Name);\r\n\t}\r\n\r\n\t// ** Kill Methods\r\n\r\n\t/**\r\n\t * Kill graphics.\r\n\t */\r\n\tprivate killGraphics() {\r\n\t\t// Kill graphics\r\n\t\tthis.retryBtn.destroy();\r\n\t\tthis.returnBtn.destroy();\r\n\r\n\t\t// Kill sub scenes\r\n\t\t// this.scene.stop('AnotherSubScene');\r\n\t}\r\n\t/**\r\n\t * Kill listeners\r\n\t */\r\n\tprivate killListeners() {\r\n\t\t// Remove scene events listeners\r\n\t\tthis.events.off('shutdown', this.onSceneShutdown, this);\r\n\t\tthis.events.off('pause', this.onScenePause, this);\r\n\t\tthis.events.off('resume', this.onSceneResume, this);\r\n\t}\r\n\t/**\r\n\t * Kill properties.\r\n\t */\r\n\tprivate killProps() {\r\n\r\n\t\t// Nullify all your general properties here\r\n\t}\r\n\r\n\tprivate onSceneShutdown() {\r\n\t\tthis.killGraphics();\r\n\t\tthis.killListeners();\r\n\t\tthis.killProps();\r\n\t}\r\n\tprivate onScenePause() {\r\n\r\n\t}\r\n\tprivate onSceneResume() {\r\n\r\n\t}\r\n}\r\n","import Utilities from \"../utilities\";\r\nimport Zero from \"../Prefabs/Zero\";\r\nimport TextureKeys from \"../Const/TextureKeys\";\r\nimport TileKeys from \"../Const/TileKeys\";\r\nimport { Body } from \"matter\";\r\nimport { GameObjects, Tilemaps } from \"phaser\";\r\nimport { debug } from \"webpack\";\r\n\r\n\r\nexport default class MainGame extends Phaser.Scene {\r\n\t/**\r\n\t * Unique name of the scene.\r\n\t */\r\n\tpublic static Name = \"MainGame\";\r\n\r\n\tprivate background: Phaser.GameObjects.TileSprite;\r\n\r\n\tprivate logo: Phaser.GameObjects.Image;\r\n\tprivate playerZero!: Zero;\r\n\tprivate healthLabel!: Phaser.GameObjects.Text\r\n\r\n\tprivate tileset!: Phaser.Tilemaps.Tileset;\r\n\tprivate platforms = [];\r\n\tprivate activePlatform = [];\r\n\tprivate objects = [];\r\n\tprivate platformPositionMultiplier = 1;\r\n\tprivate spikes: any;\r\n\tprivate coins: any;\r\n\tprivate acids: any;\r\n\tprivate destructibles: any;\r\n\r\n\tprivate scoreLabel!: Phaser.GameObjects.Text\r\n\tprivate highScore: number;\r\n\tprivate score: number;\r\n\r\n\tprivate width: number;\r\n\tprivate height: number;\r\n\r\n\tpublic preload(): void {\r\n\t\t// Preload as needed.\r\n\t}\r\n\r\n\tinit(){\r\n\t\tthis.playerZero = new Zero(this, this.scale.width  * 0.20, this.scale.height * .90);\r\n\t\tthis.score = 0;\r\n\t\tthis.playerZero.playerHealth = 3;\r\n\t\tthis.platformPositionMultiplier = 1;\r\n\t\tthis.platforms = [];\r\n\t\tthis.activePlatform = [];\r\n\t\tthis.objects = [];\r\n\t}\r\n\r\n\tpublic create(): void {\r\n\t\tUtilities.LogSceneMethodEntry(\"MainGame\", \"create\");\r\n\t\tthis.width = this.scale.width;\r\n\t\tthis.height =  this.scale.height;\r\n\r\n\t\t//BackGround\r\n\t\tthis.background = this.createBackgroundSprites(this.width, this.height);\r\n\r\n\t\t//Player\r\n\t\tthis.add.existing(this.playerZero);\t\r\n\t\tconst body = this.playerZero.body as Phaser.Physics.Arcade.Body;\r\n\t\tbody.setCollideWorldBounds(true);\r\n\r\n\t\t//Tilemap setup\r\n\t\tthis.initGameObjects();\r\n\t\tthis.initTileMaps();\r\n\t\tthis.initTileMapColliders(this.playerZero);\r\n\t\tthis.initPhysics();\r\n\r\n\t\tthis.initGraphics();\r\n\t\tthis.initListeners();\r\n\t\tthis.initProps();\r\n\r\n\t\t//Camera Follow\r\n\t\tthis.cameras.main.startFollow(this.playerZero, true, 1, 1, -this.width*.30, 0);\r\n\t\tthis.cameras.main.setBounds(0, 0, Number.MAX_SAFE_INTEGER, this.height);\r\n\t}\r\n\r\n\t//#region update\r\n\tpublic update(): void {\r\n\t\t// Update logic, as needed.\r\n\t\tthis.loadUnloadTilemap(3);\r\n\t\tthis.background.setTilePosition(this.cameras.main.scrollX);\r\n\t}\r\n\t//#endregion\r\n\r\n\t/**\r\n\t * Initialize graphics.\r\n\t */\r\n\tprivate initGraphics() {\r\n\t\t//this.logo = this.add.image(this.cameras.main.centerX, this.cameras.main.centerY, \"Phaser-Logo-Small\");\r\n\t\t//Score UI\r\n\t\tthis.scoreLabel = this.add.text(10, 20, `Score: ${this.score}`,{\r\n\t\t\tfontSize: '25px',\r\n\t\t\tfontStyle: 'bold',\r\n\t\t\tcolor: '#F2F2F2',\r\n\t\t\tshadow: {fill: true, blur: 2, offsetY: 1, offsetX: 1},\r\n\t\t\tpadding: {left: 15, right: 15, top: 5, bottom: 5}\r\n\t\t}).setScrollFactor(0);\r\n\t\t//Health UI\r\n\t\tthis.healthLabel = this.add.text(10, 0, `HP: ${this.playerZero.playerHealth}`,{\r\n\t\t\tfontSize: '25px',\r\n\t\t\tfontStyle: 'bold',\r\n\t\t\tcolor: '#F2F2F2',\r\n\t\t\tshadow: {fill: true, blur: 2, offsetY: 1, offsetX: 1},\r\n\t\t\tpadding: {left: 15, right: 15, top: 5, bottom: 5}\r\n\t\t}).setScrollFactor(0);\r\n\t}\r\n\t/**\r\n\t * Initialize listeners\r\n\t */\r\n\tprivate initListeners() {\r\n\t\t// Add scene events listeners\r\n\t\tthis.events.on('shutdown', this.onSceneShutdown, this);\r\n\t\tthis.events.on('pause', this.onScenePause, this);\r\n\t\tthis.events.on('resume', this.onSceneResume, this);\r\n\t\t// Add other listeners here\r\n\t}\r\n\t/**\r\n\t * Initialize properties.\r\n\t */\r\n\tprivate initProps() {\r\n\t\t// Initialize properties here\r\n\t}\r\n\r\n\t/**\r\n\t * Kill graphics.\r\n\t */\r\n\tprivate killGraphics() {\r\n\t\t// Kill graphics\r\n\r\n\t\t// Kill sub scenes\r\n\t\t// this.scene.stop('AnotherSubScene');\r\n\t}\r\n\t/**\r\n\t * Kill listeners\r\n\t */\r\n\tprivate killListeners() {\r\n\t\t// Remove scene events listeners\r\n\t\tthis.events.off('shutdown', this.onSceneShutdown, this);\r\n\t\tthis.events.off('pause', this.onScenePause, this);\r\n\t\tthis.events.off('resume', this.onSceneResume, this);\r\n\t}\r\n\t/**\r\n\t * Kill properties.\r\n\t */\r\n\tprivate killProps() {\r\n\r\n\t\t// Nullify all your general properties here\r\n\t}\r\n\r\n\tprivate onSceneShutdown() {\r\n\t\tthis.updateHighScore();\r\n\t\tthis.killGraphics();\r\n\t\tthis.killListeners();\r\n\t\tthis.killProps();\r\n\t}\r\n\tprivate onScenePause() {\r\n\r\n\t}\r\n\tprivate onSceneResume() {\r\n\r\n\t}\r\n\r\n\tprivate updateHighScore(){\r\n\t\tthis.highScore = 0;\r\n\t\tif(localStorage.getItem(\"gameHighScore\") !== null){\r\n\t\t\tthis.highScore = parseInt(localStorage.getItem(\"gameHighScore\"));\r\n\t\t}\r\n\r\n\t\tif(this.score > this.highScore){\r\n\t\t\tlocalStorage.setItem(\"gameHighScore\",this.score.toString());\r\n\t\t}\r\n\t}\r\n\r\n\tprivate initTileMaps(){\r\n\t\tthis.initStartingMap();\r\n\t\tthis.initTileMap('map_1','laboratory',TextureKeys.Tiles,'Platforms');\r\n\t\tthis.initTileMap('map_2','laboratory',TextureKeys.Tiles,'Platforms');\r\n\t\tthis.initTileMap('map_3','laboratory',TextureKeys.Tiles,'Platforms');\r\n\t\tthis.initTileMap('map_4','laboratory',TextureKeys.Tiles,'Platforms');\r\n\t\tthis.initTileMap('map_5','laboratory',TextureKeys.Tiles,'Platforms');\r\n\t}\r\n\r\n\tprivate initGameObjects(){\r\n\t\tthis.spikes = this.physics.add.group({\r\n\t\t\tallowGravity: false,\r\n\t\t\timmovable: true\r\n\t\t});\r\n\r\n\t\tthis.coins = this.physics.add.group({\r\n\t\t\tallowGravity: false,\r\n\t\t\timmovable: true\r\n\t\t});\r\n\r\n\t\tthis.acids = this.physics.add.group({\r\n\t\t\tallowGravity: false,\r\n\t\t\timmovable: true\r\n\t\t});\r\n\r\n\t\tthis.destructibles = this.physics.add.group({\r\n\t\t\tallowGravity: false,\r\n\t\t\timmovable: true\r\n\t\t});\r\n\t}\r\n\r\n\tprivate initStartingMap(){\r\n\t\tconst map = this.make.tilemap({key: 'map_0'});\r\n\t\tthis.tileset = map.addTilesetImage('laboratory', TextureKeys.Tiles);\r\n\t\tconst platform = map.createLayer('Platforms',this.tileset,0,0);\r\n\t\tplatform.setPosition(0,0);\r\n\t\tplatform.setCollisionByExclusion([-1] , true);\r\n\r\n\t\tthis.physics.add.collider(this.playerZero, platform);\r\n\t}\r\n\r\n\tprivate initTileMap(tileMapKey, tileSetName, tileSetKey, tileMapLayerID){\r\n\t\tconst map = this.make.tilemap({key: tileMapKey});\r\n\t\tthis.tileset = map.addTilesetImage(tileSetName, tileSetKey);\r\n\t\tconst platform = map.createLayer(tileMapLayerID ,this.tileset,0,0);\r\n\t\tthis.platforms.push(platform);\r\n\t\tplatform.setPosition(-980,0);\r\n\t\tplatform.setCollisionByExclusion([-1] , true);\r\n\r\n\t\tvar container = this.add.container(0,0);\r\n\t\t//container.add(platform)\r\n\r\n\t\tmap.getObjectLayer('Spike').objects.forEach((spike) =>{\r\n\t\t\tconst spikeSprite = this.spikes.create(spike.x, spike.y - spike.height, TextureKeys.Spike).setOrigin(0);\r\n\t\t\tspikeSprite.body.setSize(spike.width, spike.height -20).setOffset(0,20);\r\n\t\t\tcontainer.add(spikeSprite);\r\n\t\t});\r\n\r\n\t\tmap.getObjectLayer('Coin').objects.forEach((coin) => {\r\n\t\t\tconst coinSprite = this.coins.create(coin.x, coin.y - coin.height, TextureKeys.Coin).setOrigin(0);\r\n\t\t\tcoinSprite.body.setSize(coin.width, coin.height);\r\n\t\t\tcontainer.add(coinSprite);\r\n\t\t});\r\n\r\n\t\tmap.getObjectLayer('Acid').objects.forEach((acid) => {\r\n\t\t\tconst acidSprite = this.acids.create(acid.x, acid.y - acid.height, TextureKeys.Acid).setOrigin(0);\r\n\t\t\tacidSprite.body.setSize(acid.width, acid.height-20).setOffset(0,20);\r\n\t\t\tcontainer.add(acidSprite);\r\n\t\t});\r\n\r\n\t\tmap.getObjectLayer('Destructible').objects.forEach((destructible) => {\r\n\t\t\tconst destructibleSprite = this.destructibles.create(destructible.x, destructible.y - destructible.height,\r\n\t\t\t\t TextureKeys.Destructible).setOrigin(0);\r\n\t\t\tdestructibleSprite.body.setSize(destructible.width, destructible.height);\r\n\t\t\tcontainer.add(destructibleSprite);\r\n\t\t});\r\n\t\r\n\t\tthis.objects.push(container);\r\n\t\tcontainer.setPosition(-980,0);\r\n\t}\r\n\r\n\tprivate loadUnloadTilemap(numberOfActivePlatforms){\r\n\t\t//Load random tilemaps\r\n\t\twhile(this.activePlatform.length < numberOfActivePlatforms){\t\r\n\t\t\t\t//Get Random\r\n\t\t\t\tlet randomPlatformIndex = Math.floor(Math.random() * this.platforms.length);\r\n\t\t\t\tlet existing = false;\r\n\t\t\t\tfor(let i = 0; i < this.activePlatform.length; i++){\r\n\t\t\t\t\tif(this.activePlatform[i] == randomPlatformIndex){\r\n\t\t\t\t\t\texisting = true;\r\n\t\t\t\t\t\tbreak; \r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif(existing){\r\n\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tthis.activePlatform.push(randomPlatformIndex);\r\n\t\t\t\t\tthis.moveTileMap(randomPlatformIndex, this.width*this.platformPositionMultiplier,0);\r\n\t\t\t\t\tthis.platformPositionMultiplier++;\r\n\t\t\t\t};\r\n\t\t};\r\n\r\n\t\t//Unload tilemap\r\n\t\tif(this.playerZero.x > this.platforms[this.activePlatform[0]].x + this.width*2){\r\n\t\t\tthis.resetPlatform(this.activePlatform[0]);\r\n\t\t\tthis.activePlatform.shift();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate moveTileMap(platformsIndex, x, y){\r\n\t\tthis.platforms[platformsIndex].setPosition(x ,y);\r\n\t\tthis.objects[platformsIndex].setPosition(x,y);\r\n\t}\r\n\r\n\tprivate resetPlatform(index){\r\n\t\tthis.objects[index].list.forEach(gameObject =>{\r\n\t\t\tgameObject.body.enable = true;\r\n\t\t\tgameObject.setVisible(true);\r\n\t\t\tgameObject.setActive(true);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate initTileMapColliders(gameObject){\r\n\t\tthis.platforms.forEach(platform => {\r\n\t\t\tthis.physics.add.collider(gameObject, platform);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate createBackgroundSprites(width, height){\r\n\t\treturn this.add.tileSprite(0, 0, width, height, TextureKeys.Background).setOrigin(0).setScrollFactor(0).setAlpha(0.85);\r\n\t}\r\n\r\n\tprivate initPhysics(){\r\n\t\t//Bounds Collision\r\n\t\tthis.physics.world.setBounds(0, 0, Number.MAX_SAFE_INTEGER, this.height);\r\n\t\t//Objects Collision\r\n\t\tthis.physics.add.overlap(this.playerZero, this.spikes, this.playerHitSpike, undefined, this);\r\n\t\tthis.physics.add.overlap(this.playerZero, this.coins, this.coinCollect, undefined, this);\r\n\t\tthis.physics.add.overlap(this.playerZero, this.acids, this.playerHitAcid, undefined, this);\r\n\t\tthis.physics.add.collider(this.playerZero, this.destructibles);\r\n\t\tthis.physics.add.overlap(this.playerZero.attackHitBox, this.destructibles, this.attackHitDestructible ,undefined, this);\r\n\t}\r\n\t\r\n\tprivate playerHitSpike(playerZero, spike){\r\n\t\tplayerZero.damagePlayer(1);\r\n\t\tspike.body.enable = false;\r\n\t\tthis.healthLabel.text = `HP: ${this.playerZero.playerHealth}`;\r\n\t}\r\n\r\n\tprivate playerHitAcid(playerZero, acid){\r\n\t\tplayerZero.damagePlayer(999);\r\n\t\tacid.body.enable = false;\r\n\t\tthis.healthLabel.text = `HP: ${this.playerZero.playerHealth}`;\r\n\t}\r\n\r\n\tprivate attackHitDestructible(playerZeroAttack, destructible){\r\n\t\tplayerZeroAttack.body.enable = false;\r\n\t\tdestructible.body.enable = false;\r\n\t\tdestructible.visible = false;\r\n\t}\r\n\r\n\tprivate coinCollect(playerZero, coin){\r\n\t\tthis.score++;\r\n\t\tcoin.visible = false;\r\n\t\tcoin.body.enable = false;\r\n\t\tthis.scoreLabel.text = `Score: ${this.score}`;\r\n\t}\r\n}\r\n","import Utilities from \"../utilities\";\r\nimport MainGame from \"./main_game_scene\";\r\n\r\nimport BaseButton from \"../Library/taktyl/display/button/base_button\";\r\nimport LabelButton from \"../Library/taktyl/display/button/label_button\";\r\n\r\nexport default class MainMenu extends Phaser.Scene {\r\n\t/**\r\n\t * Unique name of the scene.\r\n\t */\r\n\tpublic static Name = \"MainMenu\";\r\n\r\n\tprivate startBtn: BaseButton;\r\n\tprivate gameLogo: Phaser.GameObjects.Image;\r\n\tprivate gameBackground: Phaser.GameObjects.Image;\r\n\r\n\tpublic preload(): void {\r\n\t\t// Preload as needed.\r\n\t}\r\n\r\n\tpublic create(): void {\r\n\t\tUtilities.LogSceneMethodEntry(\"MainMenu\", \"create\");\r\n\r\n\t\tthis.initGraphics();\r\n\t\tthis.initListeners();\r\n\t\tthis.initProps();\r\n\t}\r\n\r\n\tpublic update(): void {\r\n\t\t// Update logic, as needed.\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize graphics.\r\n\t */\r\n\tprivate initGraphics() {\r\n\t\tconst textYPosition = this.cameras.main.height / 2;\r\n\r\n\t\tthis.gameBackground = this.add.image(this.cameras.main.centerX, textYPosition, \"main_background\");\r\n\t\tthis.gameLogo = this.add.image(this.cameras.main.centerX, textYPosition - 100, \"main_title\");\r\n\t\t\r\n\t\tthis.startBtn = new LabelButton(this, this.cameras.main.centerX, textYPosition + 200, \"btn_general\", \"btn_general\", null, null, { x: 1, y: 1 }, \"title_btnPlay\");\r\n\t\tthis.startBtn.onClick = this.onNextScene.bind(this);\r\n\t}\r\n\t/**\r\n\t * Initialize listeners\r\n\t */\r\n\tprivate initListeners() {\r\n\t\t// Add scene events listeners\r\n\t\tthis.events.on('shutdown', this.onSceneShutdown, this);\r\n\t\tthis.events.on('pause', this.onScenePause, this);\r\n\t\tthis.events.on('resume', this.onSceneResume, this);\r\n\t\t// Add other listeners here\r\n\t}\r\n\t/**\r\n\t * Initialize properties.\r\n\t */\r\n\tprivate initProps() {\r\n\t\t// Initialize properties here\r\n\t}\r\n\r\n\tprivate onNextScene() {\r\n\t\tthis.scene.start(MainGame.Name);\r\n\t}\r\n\r\n\t// ** Kill Methods\r\n\r\n\t/**\r\n\t * Kill graphics.\r\n\t */\r\n\tprivate killGraphics() {\r\n\t\t// Kill graphics\r\n\t\tthis.gameLogo.destroy();\r\n\t\tthis.gameBackground.destroy();\r\n\t\tthis.startBtn.destroy();\r\n\r\n\t\t// Kill sub scenes\r\n\t\t// this.scene.stop('AnotherSubScene');\r\n\t}\r\n\t/**\r\n\t * Kill listeners\r\n\t */\r\n\tprivate killListeners() {\r\n\t\t// Remove scene events listeners\r\n\t\tthis.events.off('shutdown', this.onSceneShutdown, this);\r\n\t\tthis.events.off('pause', this.onScenePause, this);\r\n\t\tthis.events.off('resume', this.onSceneResume, this);\r\n\t}\r\n\t/**\r\n\t * Kill properties.\r\n\t */\r\n\tprivate killProps() {\r\n\r\n\t\t// Nullify all your general properties here\r\n\t}\r\n\r\n\tprivate onSceneShutdown() {\r\n\t\tthis.killGraphics();\r\n\t\tthis.killListeners();\r\n\t\tthis.killProps();\r\n\t}\r\n\tprivate onScenePause() {\r\n\r\n\t}\r\n\tprivate onSceneResume() {\r\n\r\n\t}\r\n}\r\n","import Utilities from \"../utilities\";\r\nimport BaseButton from \"../Library/taktyl/display/button/base_button\";\r\nimport LocalizationManager from \"../Library/taktyl/managers/localization_manager\";\r\nimport MainMenu from \"./main_menu_scene\";\r\nimport MainGame from \"./main_game_scene\";\r\nimport GameOver from \"./game_over_scene\";\r\nimport TextureKeys from \"../Const/TextureKeys\";\r\n\r\nexport default class Preloader extends Phaser.Scene {\r\n\t/**\r\n\t * Unique name of the scene.\r\n\t */\r\n\tpublic static Name = \"Preloader\";\r\n\r\n\tprivate progressBar: Phaser.GameObjects.Graphics;\r\n\tprivate progressBox: Phaser.GameObjects.Graphics;\r\n\tprivate loadingText: Phaser.GameObjects.BitmapText;\r\n\tprivate percentText: Phaser.GameObjects.BitmapText;\r\n\r\n\tprivate gameWidth: number;\r\n\tprivate gameHeight: number;\r\n\r\n\tpublic preload(): void {\r\n\r\n\t\tthis.load.bitmapFont(\r\n\t\t\t\"font_lato_reg\",\r\n\t\t\t\"assets/fonts/latoreg.png\",\r\n\t\t\t\"assets/fonts/latoreg.fnt\"\r\n\t\t);\r\n\t}\r\n\r\n\tpublic create(): void {\r\n\t\tUtilities.LogSceneMethodEntry(\"Preloader\", \"create\");\r\n\r\n\t\tthis.gameWidth = this.sys.game.renderer.width\r\n\t\tthis.gameHeight = this.sys.game.renderer.height\r\n\r\n\t\tLocalizationManager.instance.setLocaleData(this, \"en_us\", () => {\r\n\t\t\tthis.addProgressBar();\r\n\r\n\t\t\tthis.load.path = \"assets/\";\r\n\t\t\tthis.load.image(\"main_background\", \"images/menu_bg.jpg\");\r\n\t\t\tthis.load.image(\"main_title\", \"images/game_title.png\");\r\n\r\n\t\t\tthis.load.image(\"btn_general\", \"images/ui/btn_general.png\");\r\n\r\n\t\t\tthis.load.audio(\"sfx_button\", [\"audio/sfx/sfx_generic_button.mp3\", \"audio/sfx/sfx_generic_button.ogg\"])\r\n\r\n\t\t\t//Assets for Main_Game\r\n\t\t\tthis.load.image(TextureKeys.Background, 'images/environment/background_repeat.png')\r\n\t\t\tthis.load.atlas(TextureKeys.PlayerZero, 'images/zero/player-zero.png', 'images/zero/player-zero.json');\r\n\t\t\tthis.load.image(TextureKeys.Tiles, 'images/environment/laboratory.png');\r\n\t\t\tthis.load.image(TextureKeys.Spike, 'images/environment/spike.png')\r\n\t\t\tthis.load.image(TextureKeys.Acid, 'images/environment/acid.png')\r\n\t\t\tthis.load.image(TextureKeys.Saw, 'images/environment/saw.png')\r\n\t\t\tthis.load.image(TextureKeys.Destructible, 'images/environment/destructible.png')\r\n\t\t\tthis.load.image(TextureKeys.Coin, 'images/environment/coin.png')\r\n\r\n\t\t\tthis.load.tilemapTiledJSON('map_0', 'tilemaps/tilemap_0.json')\r\n\t\t\tthis.load.tilemapTiledJSON('map_1', 'tilemaps/tilemap_1.json')\r\n\t\t\tthis.load.tilemapTiledJSON('map_2', 'tilemaps/tilemap_2.json')\r\n\t\t\tthis.load.tilemapTiledJSON('map_3', 'tilemaps/tilemap_3.json')\r\n\t\t\tthis.load.tilemapTiledJSON('map_4', 'tilemaps/tilemap_4.json')\r\n\t\t\tthis.load.tilemapTiledJSON('map_5', 'tilemaps/tilemap_5.json')\r\n\r\n\t\t});\r\n\t\tthis.load.start();\r\n\t}\r\n\r\n\tpublic update(): void {\r\n\t\t// preload handles updates to the progress bar, so nothing should be needed here.\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a progress bar to the display, showing the percentage of assets loaded and their name.\r\n\t */\r\n\tprivate addProgressBar(): void {\r\n\r\n\t\tthis.load.on(\"progress\", this.onStart, this);\r\n\r\n\t\tthis.load.on(\"progress\", this.onProgress, this);\r\n\r\n\t\tthis.load.on(\"complete\", this.onComplete, this);\r\n\t}\r\n\r\n\tprivate onStart() {\r\n\r\n\t\t/** Customizable. This text color will be used around the progress bar. */\r\n\t\tconst outerTextColor = 0x000000;\r\n\r\n\t\tthis.progressBar = this.add.graphics();\r\n\t\tthis.progressBox = this.add.graphics();\r\n\t\tthis.progressBox.fillStyle(0x222222, 0.8);\r\n\t\tthis.progressBox.fillRect(this.gameWidth / 4, this.gameHeight / 2 - 30, this.gameWidth / 2, 50);\r\n\r\n\t\tthis.loadingText = this.add.bitmapText(this.gameWidth / 2, this.gameHeight / 2 - 50, \"font_lato_reg\", \"Loading...\", 20, 1).\r\n\t\t\tsetTintFill(outerTextColor).\r\n\t\t\tsetOrigin(0.5);\r\n\r\n\t\tthis.percentText = this.add.bitmapText(this.gameWidth / 2, this.gameHeight / 2 - 5, \"font_lato_reg\", \"\", 18, 1,).\r\n\t\t\tsetTintFill(0xFFFFFF).\r\n\t\t\tsetOrigin(0.5);\r\n\t}\r\n\tprivate onProgress(value: number) {\r\n\r\n\t\tthis.percentText.setText(parseInt(value * 100 + \"\", 10) + \"%\");\r\n\t\tthis.progressBar.clear();\r\n\t\tthis.progressBar.fillStyle(0xffffff, 1);\r\n\t\tthis.progressBar.fillRect((this.gameWidth / 4) + 10, (this.gameHeight / 2) - 30 + 10, (this.gameWidth / 2 - 10 - 10) * value, 30);\r\n\t}\r\n\tprivate onComplete() {\r\n\t\tthis.progressBar.destroy();\r\n\t\tthis.progressBox.destroy();\r\n\t\tthis.loadingText.destroy();\r\n\t\tthis.percentText.destroy();\r\n\r\n\t\tBaseButton.defaultSFX = \"sfx_button\";\r\n\r\n\t\tthis.scene.start(MainMenu.Name); //Set back to MainMenu.Name after editing game\r\n\t}\r\n}\r\n","export default class Utilities {\r\n\t/**\r\n\t * Logs a particular message to the console.\r\n\t * @param message Message to log.\r\n\t */\r\n\tpublic static Log(message: string): void {\r\n\t\tconsole.log((new Date()).toISOString() + \" : \" + message);\r\n\t}\r\n\r\n\t/**\r\n\t * Logs the start of a method in a scene.\r\n\t * @param sceneName Name of the scene.\r\n\t * @param method Method called within the scene.\r\n\t */\r\n\tpublic static LogSceneMethodEntry(sceneName: string, method: string): void {\r\n\t\tthis.Log(\"Entered \" + sceneName + \" \" + method + \"()\");\r\n\t}\r\n}\r\n","module.exports = Phaser;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(862);\n"],"names":["GlobalConfig","type","Phaser","AUTO","dimensions","width","height","enableMobileAutoAdjust","showDebugLines","showDebugConsole","AnimationKeys","TextureKeys","gameConfig","physics","default","arcade","gravity","y","debug","backgroundColor","scale","mode","Scale","FIT","autoCenter","CENTER_BOTH","parent","render","transparent","input","activePointers","title","version","Game","constructor","config","LogSceneMethodEntry","super","this","scene","add","Name","start","window","addEventListener","onPause","bind","onResume","document","onVisibilityChange","instance","pauseBGM","pauseAllSFX","pauseVO","resumeBGM","resumeAllSFX","resumeVO","hidden","onload","_defaultSFX","BaseButton","GameObjects","Container","p_scene","posX","posY","pointerUpTexture","pointerDownTexture","hoverTexture","disabledTexture","scaleOnPointerDown","onClickScale","baseScale","x","isDown","isActive","setup","existing","p_value","baseButton","setTexture","callback","buttonCallback","image","setSize","getBounds","setInteractive","pixelPerfect","alphaTolerance","on","onPointerOut","onPointerDown","onPointerIn","onPointerUp","setScale","pointer","leftButtonDown","scaleX","scaleY","playSFX","PointerUpOutside","setDisabled","p_tintEnabled","disableInteractive","iterate","objects","setTint","setEnabled","clearTint","LabelButton","textKey","txtLabel","setOrigin","_wordWrapWidth","Symbol","BaseText","BitmapText","font","text","size","align","value","wordArray","split","finalText","i","length","testWord","splitWord","word","sampleWord","slice","tweenToValue","from","to","duration","console","log","tween","stop","tweens","addCounter","updateText","Math","floor","getValue","toLocaleString","_data","LocalizedText","key","data","getLocalizedTextData","Number","parseInt","color","destroy","_sInstance","_sEnforcer","_dataLocale","_languageCode","_initProps","LocalizationManager","p_enforcer","Error","p_key","setLocaleData","p_languageCode","p_callbackComplete","p_callbackError","strLocale","cache","json","has","remove","toLowerCase","load","once","p_loader","get","items","setTimeout","SoundManager","soundManagerEnforcer","sfxList","bgmVolume","sfxVolume","voVolume","isBGMMuted","isSFXMuted","isVOMuted","managerInstance","localStorage","getItem","volume","bgm","setVolume","sfx","playbackVolume","vo","playBGM","sound","mute","loop","play","newSFX","push","OnSFXEnd","playVO","muteAll","muteBGM","muteAllSFX","muteVO","setMute","pause","resume","stopBGM","stopAllSFX","stopVO","music","index","indexOf","splice","PlayerState","Zero","playerState","moving","playerZero","sprite","PlayerZero","initAnimations","playerHealth","ZeroRun","body","setOffset","attackHitBox","rectangle","setAllowGravity","cursors","keyboard","createCursorKeys","preUpdate","anims","getName","ZeroAttackUp","ZeroAttackDown","ZeroAttack","enable","grounded","blocked","down","falling","velocity","touching","up","ZeroSlide","setVelocityX","left","setAttackHitBox","ZeroJump","setVelocityY","right","ZeroBoost","currentAnim","repeat","playAfterRepeat","ZeroFall","round","ZeroJumpPeak","hit","ZeroHit1","getProgress","dead","ZeroDead","run","createAnimations","ZeroIdle","ZeroLand","ZeroHit2","animKeys","textureKeys","pFix","s","e","fRate","rep","create","frames","generateFrameNames","end","prefix","zeroPad","suffix","frameRate","damagePlayer","damage","enableBody","GameOver","Scene","preload","init","highScore","initGraphics","initListeners","initProps","update","textYPosition","cameras","main","setBackgroundColor","gameOverText","centerX","fontSize","fontStyle","shadow","fill","blur","offsetY","offsetX","padding","top","bottom","setScrollFactor","scoreText","retryBtn","onClick","onPreviousScene","returnBtn","onNextScene","events","onSceneShutdown","onScenePause","onSceneResume","killGraphics","killListeners","off","killProps","MainGame","platforms","activePlatform","platformPositionMultiplier","score","background","createBackgroundSprites","setCollideWorldBounds","initGameObjects","initTileMaps","initTileMapColliders","initPhysics","startFollow","setBounds","MAX_SAFE_INTEGER","loadUnloadTilemap","setTilePosition","scrollX","scoreLabel","healthLabel","updateHighScore","setItem","toString","initStartingMap","initTileMap","Tiles","spikes","group","allowGravity","immovable","coins","acids","destructibles","map","make","tilemap","tileset","addTilesetImage","platform","createLayer","setPosition","setCollisionByExclusion","collider","tileMapKey","tileSetName","tileSetKey","tileMapLayerID","container","getObjectLayer","forEach","spike","spikeSprite","Spike","coin","coinSprite","Coin","acid","acidSprite","Acid","destructible","destructibleSprite","Destructible","numberOfActivePlatforms","randomPlatformIndex","random","moveTileMap","resetPlatform","shift","platformsIndex","list","gameObject","setVisible","setActive","tileSprite","Background","setAlpha","world","overlap","playerHitSpike","undefined","coinCollect","playerHitAcid","attackHitDestructible","playerZeroAttack","visible","MainMenu","gameBackground","gameLogo","startBtn","Preloader","bitmapFont","gameWidth","sys","game","renderer","gameHeight","addProgressBar","path","audio","atlas","Saw","tilemapTiledJSON","onStart","onProgress","onComplete","progressBar","graphics","progressBox","fillStyle","fillRect","loadingText","bitmapText","setTintFill","percentText","setText","clear","defaultSFX","message","Date","toISOString","sceneName","method","Log","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}